apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

react { autolinkLibrariesWithApp() }

def enableProguardInReleaseBuilds = false
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
  ndkVersion rootProject.ext.ndkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  compileSdk rootProject.ext.compileSdkVersion

  namespace "com.wizmarket"

  defaultConfig {
    applicationId "com.wizmarket"
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode 16
    versionName "16.0"

    // (선택) NDK 이슈 회피
    ndk { abiFilters "arm64-v8a" }   // 32비트 네이티브 빌드/클린 통째로 패스

    // Kakao
    manifestPlaceholders = [ KAKAO_NATIVE_APP_KEY: "ef66c5836528d39100550fd6ca87f7dc" ]
    resValue "string", "kakao_native_app_key", "ef66c5836528d39100550fd6ca87f7dc"
    buildConfigField "String", "KAKAO_NATIVE_APP_KEY", "\"ef66c5836528d39100550fd6ca87f7dc\""

    // ✅ IAP store dimension 기본값을 play로
    missingDimensionStrategy "store", "play"
  }

  signingConfigs {
    debug {
      storeFile file('debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
    release {
      storeFile file(MYAPP_UPLOAD_STORE_FILE)
      storePassword MYAPP_UPLOAD_STORE_PASSWORD
      keyAlias MYAPP_UPLOAD_KEY_ALIAS
      keyPassword MYAPP_UPLOAD_KEY_PASSWORD
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
      // (선택) Kakao 값 재주입
      manifestPlaceholders.KAKAO_NATIVE_APP_KEY = "ef66c5836528d39100550fd6ca87f7dc"
      resValue "string", "kakao_native_app_key", "ef66c5836528d39100550fd6ca87f7dc"
      buildConfigField "String","KAKAO_NATIVE_APP_KEY","\"ef66c5836528d39100550fd6ca87f7dc\""
    }
    release {
      signingConfig signingConfigs.release
      minifyEnabled enableProguardInReleaseBuilds
      proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
      manifestPlaceholders.KAKAO_NATIVE_APP_KEY = "ef66c5836528d39100550fd6ca87f7dc"
      resValue "string", "kakao_native_app_key", "ef66c5836528d39100550fd6ca87f7dc"
      buildConfigField "String","KAKAO_NATIVE_APP_KEY","\"ef66c5836528d39100550fd6ca87f7dc\""
    }
  }

  // ✅ IAP가 요구하는 store flavor
  flavorDimensions "store"
  productFlavors {
    play { dimension "store" }
    // amazon { dimension "store" }
  }

  // (선택) amazon 변형 전체 무시(빌드 간소화)
  variantFilter { variant ->
    def names = variant.flavors*.name
    if (names.contains("amazon")) setIgnore(true)
  }

  // ✅ JDK 17 정렬
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_17
    targetCompatibility JavaVersion.VERSION_17
  }
}

dependencies {
  implementation("com.facebook.react:react-android")
  if (hermesEnabled.toBoolean()) {
    implementation("com.facebook.react:hermes-android")
  } else {
    implementation jscFlavor
  }

  implementation(platform("com.google.firebase:firebase-bom:33.3.0"))
  implementation "com.kakao.sdk:v2-user:2.20.6"

  // ⚠️ IAP를 쓰는 중이면 billing-ktx를 수동으로 추가하지 마세요(중복 충돌)
  // implementation "com.android.billingclient:billing-ktx:6.2.1"
}

apply plugin: "com.google.gms.google-services"

// ✅ Kotlin 컴파일러 옵션(JVM 17)
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
  kotlinOptions {
    jvmTarget = "17"
    freeCompilerArgs += ["-Xjvm-default=all-compatibility"]
  }
}
